{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","Header.js","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","useContext","removeTodo","toggleTodo","classes","completed","push","className","join","type","onChange","id","checked","title","onClick","TodoList","props","todos","map","key","AddTodo","onCreate","input","defaultValue","useState","value","setValue","form","event","target","placeholder","clearInput","useInputValue","onSubmit","preventDefault","trim","Header","date","Date","toLocaleDateString","weekday","month","day","localStorage","clear","window","location","reload","initialState","getItem","JSON","parse","App","setTodos","useEffect","setItem","stringify","Provider","filter","length","concat","now","ReactDOM","render","document","getElementById"],"mappings":"6JAIeA,EAFCC,IAAMC,gBCkCPC,MAhCf,YAA6B,IAATC,EAAQ,EAARA,KAAQ,EACSC,qBAAWL,GAAtCM,EADkB,EAClBA,WAAYC,EADM,EACNA,WAEdC,EAAU,GAMhB,OAJIJ,EAAKK,WACPD,EAAQE,KAAK,QAIb,4BACE,0BAAMC,UAAWH,EAAQI,KAAK,MAC5B,+BACE,2BACEC,KAAK,WACLF,UAAU,WACVG,SAAU,kBAAMP,EAAWH,EAAKW,KAChCC,QAASZ,EAAKK,YAChB,gCAEF,0BAAME,UAAU,QAAQP,EAAKa,QAG/B,4BAAQN,UAAU,eAAeO,QAAS,kBAAMZ,EAAWF,EAAKW,SCHvDI,MApBf,SAAkBC,GAChB,OACE,4BACIA,EAAMC,MAAMC,IAAI,SAAClB,GACf,OACE,kBAAC,EAAD,CACEA,KAAMA,EACNmB,IAAKnB,EAAKW,SC+BTS,MAzBf,YAAgC,IAAbC,EAAY,EAAZA,SACXC,EAfR,WAA2C,IAApBC,EAAmB,uDAAJ,GAAI,EACdC,mBAASD,GADK,mBACjCE,EADiC,KAC1BC,EAD0B,KAGxC,MAAO,CACLC,KAAM,CACJF,QACAf,SAAU,SAAAkB,GAAK,OAAIF,EAASE,EAAMC,OAAOJ,QACzClB,UAAW,QACXuB,YAAa,0BAEfC,WAAY,kBAAML,EAAS,MAKfM,CAAc,IAW5B,OACE,0BAAMC,SAVR,SAAuBL,GACrBA,EAAMM,iBAEHZ,EAAMK,KAAKF,MAAMU,SAClBd,EAASC,EAAMK,KAAKF,OACpBH,EAAMS,gBAMN,0BAAWT,EAAMK,MAEjB,4BAAQpB,UAAU,eAAeE,KAAK,aCT7B2B,MAtBf,WACE,IAMMC,GAAO,IAAIC,MAAOC,mBAAmB,QAN3B,CACdC,QAAS,OACTC,MAAO,QACPC,IAAK,YAUP,OACE,yBAAKnC,UAAU,UACb,0BAAMA,UAAU,QAAQ8B,GACxB,4BAAQ5B,KAAK,SAASF,UAAU,cAAcO,QAAS,kBAPzD6B,aAAaC,aACbC,OAAOC,SAASC,cCPpB,SAASC,IACP,OAAIL,aAAaM,QAAQ,SAChBC,KAAKC,MAAMR,aAAaM,QAAQ,UAChC,GAwDIG,MArDf,WAAgB,IAAD,EACavD,IAAM2B,SAASwB,GAD5B,mBACN/B,EADM,KACCoC,EADD,KAkCb,OAJAC,oBAAU,WACRX,aAAaY,QAAQ,QAASL,KAAKM,UAAUvC,KAC5C,CAACA,IAGF,kBAAC,EAAQwC,SAAT,CAAkBhC,MAAO,CAAEvB,WArB7B,SAAoBS,GAClB0C,EAASpC,EAAMyC,OAAO,SAAC1D,GAAD,OAAUA,EAAKW,KAAOA,MAoBLR,WAhCzC,SAAoBQ,GAClB0C,EACEpC,EAAMC,IAAI,SAAClB,GAIT,OAHIA,EAAKW,KAAOA,IACdX,EAAKK,WAAaL,EAAKK,WAElBL,QA2BT,yBAAKO,UAAU,WACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,eACZU,EAAM0C,OACH,kBAAC,EAAD,CAAU1C,MAAOA,IAEjB,uBAAGV,UAAU,aAAb,kCAIN,kBAAC,EAAD,CAASc,SA7Bf,SAAiBR,GACfwC,EACEpC,EAAM2C,OAAO,CACX,CACEjD,GAAI2B,KAAKuB,MACTxD,WAAW,EACXQ,kB,KC/BViD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.20002249.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\n\nfunction TodoItem({ todo }) {\n  const { removeTodo, toggleTodo } = useContext(Context);\n\n  const classes = [];\n\n  if (todo.completed) {\n    classes.push('done')\n  }\n\n  return (\n    <li>\n      <span className={classes.join(' ')}>\n        <label>\n          <input \n            type=\"checkbox\" \n            className='checkbox'\n            onChange={() => toggleTodo(todo.id)}\n            checked={todo.completed} />\n          <span />\n        </label>\n        <span className='text'>{todo.title}</span>\n      </span>\n      \n      <button className=\"removeButton\" onClick={() => removeTodo(todo.id)} />\n    </li>\n  )\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem';\n\nfunction TodoList(props) {\n  return (\n    <ul>\n      {Â props.todos.map((todo) => {\n          return (\n            <TodoItem \n              todo={todo} \n              key={todo.id} \n            />\n          )\n      })\n      }\n    </ul>\n  )\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction useInputValue(defaultValue = '') {\n  const [value, setValue] = useState(defaultValue);\n\n  return {\n    form: {\n      value,\n      onChange: event => setValue(event.target.value),\n      className: 'input',\n      placeholder: 'Type your task here...'\n    },\n    clearInput: () => setValue('')\n  }\n}\n\nfunction AddTodo({ onCreate }) {\n  const input = useInputValue('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    if(input.form.value.trim()) {\n      onCreate(input.form.value);\n      input.clearInput()\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <input {...input.form} />\n\n      <button className='submitButton' type='submit' />\n    </form>\n  )\n}\n\nAddTodo.propTypes = {\n  onCreate: PropTypes.func.isRequired\n}\n\nexport default AddTodo;\n","import React from 'react';\n\nfunction Header() {\n  const options = {\n    weekday: 'long',\n    month: 'short',\n    day: 'numeric',\n  };\n\n  const date = new Date().toLocaleDateString('en-US', options);\n\n  function clear() {\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"header\">\n      <span className=\"date\">{date}</span>\n      <button type=\"button\" className=\"clearButton\" onClick={() => clear()} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport TodoList from './Todo/TodoList';\nimport Context from './context';\nimport AddTodo from './Todo/AddTodo';\nimport Header from './Header';\n\nfunction initialState() {\n  if (localStorage.getItem('todos')) {\n    return JSON.parse(localStorage.getItem('todos'));\n  } return [];\n}\n\nfunction App() {\n  const [todos, setTodos] = React.useState(initialState);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          id: Date.now(),\n          completed: false,\n          title\n        }\n      ])\n    )\n  }\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos]);\n\n  return (\n    <Context.Provider value={{ removeTodo, toggleTodo }}>\n      <div className='wrapper'>\n        <Header />\n\n        <div className='listWrapper'>\n          {todos.length ? (\n              <TodoList todos={todos} />\n          ) : (\n              <p className='firstTodo'>Please, add your first To-Do!</p>\n          )}\n        </div>\n\n        <AddTodo onCreate={addTodo} />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}